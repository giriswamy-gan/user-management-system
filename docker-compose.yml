version: '3.8'

services:
  # ─────────────── Zookeeper ───────────────
  zookeeper:
    image: confluentinc/cp-zookeeper:7.6.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    healthcheck:
      test: ["CMD", "nc", "-z", "localhost", "2181"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ─────────────── Kafka Broker ───────────────
  kafka:
    image: confluentinc/cp-kafka:7.6.1
    container_name: kafka
    depends_on:
      zookeeper:
        condition: service_healthy
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:29092,PLAINTEXT_HOST://0.0.0.0:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
    healthcheck:
      test: ["CMD", "kafka-topics", "--bootstrap-server", "localhost:9092", "--list"]
      interval: 30s
      timeout: 10s
      retries: 5

  # ─────────────── User Service DB ───────────────
  userdb:
    image: postgres:15
    container_name: userdb
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: userdb
    ports:
      - "5434:5432"
    volumes:
      - userdb-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d userdb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ─────────────── Journal Service DB ───────────────
  journaldb:
    image: postgres:15
    container_name: journaldb
    environment:
      POSTGRES_USER: journal
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: journaldb
    ports:
      - "5435:5432"
    volumes:
      - journaldb-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U journal -d journaldb"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ─────────────── User Service ───────────────
  user-service:
    build:
      context: ./
      dockerfile: ./user-service-dockerfile
    container_name: user-service
    depends_on:
      - userdb
      - kafka
    ports:
      - "8081:8081"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://userdb:5432/userdb
      - SPRING_DATASOURCE_USERNAME=user
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SERVER_PORT=8081
      - JWT_SECRET=xGeSgBi4Ex+V+vasJiq57gvh2Fi5Hezbh8LdxdGrzO4=
      - JWT_EXPIRATION=86400000
      - JOURNAL_SERVICE_URL=http://journal-service:8082
    entrypoint: >
      sh -c "
        echo 'Waiting for Kafka at kafka:9092…';
        until nc -z kafka 9092;
        do
          sleep 2;
          echo 'still waiting for kafka…';
        done;
        echo 'Kafka is up. starting User‑Service';
        exec java -jar /app/app.jar
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # ─────────────── Journal Service ───────────────
  journal-service:
    build:
      context: ./
      dockerfile: ./journal-service-dockerfile
    container_name: journal-service
    depends_on:
      - journaldb
      - kafka
    ports:
      - "8082:8082"
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://journaldb:5432/journaldb
      - SPRING_DATASOURCE_USERNAME=journal
      - SPRING_DATASOURCE_PASSWORD=pass
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SERVER_PORT=8082
      - JWT_SECRET=xGeSgBi4Ex+V+vasJiq57gvh2Fi5Hezbh8LdxdGrzO4=
    entrypoint: >
      sh -c "
        echo 'Waiting for Kafka at kafka:9092…';
        until nc -z kafka 9092;
        do
          sleep 2;
          echo 'still waiting for kafka…';
        done;
        echo 'Kafka is up. starting Journal‑Service';
        exec java -jar /app/app.jar
      "
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8082/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  userdb-data:
  journaldb-data: